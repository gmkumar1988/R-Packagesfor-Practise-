fit_RF$finalModel
predict_RF <- predict(fit_RF, newdata = testing_set)
conf_matrix_RF <- confusionMatrix(table(predict_RF,testing_set$classe))
conf_matrix_RF
plot(fit_RF)
print(fit_RF$bestTune)
cat("Predictions", paste(predict(fit_RF, data_quiz)))
cat("Predictions", paste(predict(fit_RF, testing_data)))
q()
q()
q()
q()
update.packages()
clear
clear()
clr()
install.packages("wikifacts")
install.packages("ggplot2")
library(wikifacts)
library(ggplot2)
install.packages("knitr")
install.packages(c("rattle","lattice","ggplot2","caret","rpart.plot","corrplot","RColorBrewer"))
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
training_data <- read.csv("/Users/maheshg/Downloads/pml-training.csv", header = TRUE)
dim(training_data)
dim(testing_data)
intrain <- createDataPartition(y = training_data$classe,
p = 0.7, list = FALSE)
training_set <- training_data[intrain, ]
testing_set <- training_data[-intrain,]
dim(training_set)
dim(testing_set)
nzv_var <- nearZeroVar(training_set)
training_set <- training_set[, - nzv_var]
testing_set <- testing_set[ , - nzv_var]
nzv_var <- nearZeroVar(training_set)
training_set <- training_set[, - nzv_var]
testing_set <- testing_set[ , - nzv_var]
dim(training_set)
dim(testing_set)
variable_na <- sapply(training_set, function (x) mean(is.na(x))) > 0.95
training_set <- training_set [ , variable_na == FALSE]
testing_set <- testing_set[ , variable_na == FALSE]
dim(training_set)
dim(testing_set)
training_set <- training_set[, -(1:5)]
testing_set <- testing_set[, -(1:5)]
dim(training_set)
dim(testing_set)
matrix_corr <- cor(training_set[,-54])
corrplot(matrix_corr, order = "FPC", method = "circle", type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x)) > 0.95
)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
cex = 0.6, col = rgb(0,0,0))
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
library(corrplot)
install.packages("knitr")
install.packages(c("rattle","lattice","ggplot2","caret","rpart.plot","corrplot","RColorBrewer"))
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
training_data <- read.csv("/Users/maheshg/Downloads/pml-training.csv", header = TRUE)
# testing_data <- read.csv("/Users/maheshg/Downloads/pml-testing.csv", header = TRUE)
dim(training_data)
dim(testing_data)
plot(cars)
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
+          t1.cex = 0.6, t1.col = rgb(0,0,0))
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
###Decision Tree Model:
set.seed(2222)
fit_decision_tree <- rpart(classe ~ ., data = train_set, method="class")
fancyRpartPlot(fit_decision_tree)
predict_decision_tree <- predict(fit_decision_tree, newdata = test_set, type="class")
conf_matrix_decision_tree <- confusionMatrix(predict_decision_tree, factor(test_set$classe))
conf_matrix_decision_tree
plot(conf_matrix_decision_tree$table, col = conf_matrix_decision_tree$byClass,
main = paste("Decision Tree Model: Predictive Accuracy =",
round(conf_matrix_decision_tree$overall['Accuracy'], 4)))
set.seed(2222)
ctrl_GBM <- trainControl(method = "repeatedcv", number = 5, repeats = 2)
fit_GBM  <- train(classe ~ ., data = train_set, method = "gbm",
trControl = ctrl_GBM, verbose = FALSE)
fit_GBM$finalModel
predict_GBM <- predict(fit_GBM, newdata = test_set)
conf_matrix_GBM <- confusionMatrix(predict_GBM, factor(test_set$classe))
conf_matrix_GBM
set.seed(2222)
ctrl_RF <- trainControl(method = "repeatedcv", number = 5, repeats = 2)
fit_RF  <- train(classe ~ ., data = train_set, method = "rf",
trControl = ctrl_RF, verbose = FALSE)
install.packages("shinyapps")
update.packages("shinyapps")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='gmkumar1988',
token='A1D88FFDAD4E818F85890EC6F7829F0B',
secret='<SECRET>')
rsconnect::setAccountInfo(name='gmkumar1988',
token='A1D88FFDAD4E818F85890EC6F7829F0B',
secret='LwhOA8NcRa+MCBmSlObS19hS79f5t1mhzOffnoQ3')
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[,-54])
corrplot(cor(corr_matrix),order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0), is.corr = FALSE)
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
library(rsconnect)
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
corr_matrix <- cor(train_set[,-54])
corrplot(corr_matrix,order = "FPC",method = "circle",type = "lower",
t1.cex = 0.6, t1.col = rgb(0,0,0))
###Decision Tree Model:
set.seed(2222)
fit_decision_tree <- rpart(classe ~ ., data = train_set, method="class")
fancyRpartPlot(fit_decision_tree)
predict_decision_tree <- predict(fit_decision_tree, newdata = test_set, type="class")
conf_matrix_decision_tree <- confusionMatrix(predict_decision_tree, factor(test_set$classe))
conf_matrix_decision_tree
plot(conf_matrix_decision_tree$table, col = conf_matrix_decision_tree$byClass,
main = paste("Decision Tree Model: Predictive Accuracy =",
round(conf_matrix_decision_tree$overall['Accuracy'], 4)))
set.seed(2222)
ctrl_GBM <- trainControl(method = "repeatedcv", number = 5, repeats = 2)
fit_GBM  <- train(classe ~ ., data = train_set, method = "gbm",
trControl = ctrl_GBM, verbose = FALSE)
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
knitr::opts_chunk$set(echo = TRUE)
corr_matrix <- cor(train_set[ , -54])
library(rattle)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
library(corrplot)
library(RColorBrewer)
library(lattice)
library(randomForest)
library(plotly)
library(gbm)
set.seed(222)
url_train <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
url_quiz  <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
data_train <- read.csv(url(url_train), strip.white = TRUE, na.strings = c("NA",""))
data_quiz  <- read.csv(url(url_quiz),  strip.white = TRUE, na.strings = c("NA",""))
dim(data_train)
dim(data_quiz)
in_train <- createDataPartition(data_train$classe, p = 0.75, list = FALSE)
train_set <- data_train[in_train,]
test_set <- data_train[-in_train,]
dim(train_set)
dim(test_set)
nzv_var <- nearZeroVar(train_set)
train_set <- train_set[,-nzv_var]
test_set <- test_set[,-nzv_var]
dim(train_set)
dim(test_set)
na_var<- sapply(train_set,function(x) mean(is.na(x))) > 0.95
train_set <- train_set[,na_var ==FALSE]
test_set <- test_set[,na_var ==FALSE]
dim(train_set)
dim(test_set)
train_set <- train_set[,-(1:5)]
test_set <- test_set [,-(1:5)]
dim(train_set)
dim(test_set)
corr_matrix <- cor(train_set[,-54])
corr_matrix <- cor(train_set[ , -54])
corrplot(corr_matrix, order = "FPC", method = "circle", type = "lower",
tl.cex = 0.6, tl.col = rgb(0, 0, 0))
set.seed(2222)
fit_decision_tree <- rpart(classe ~ ., data = train_set, method="class")
fancyRpartPlot(fit_decision_tree)
predict_decision_tree <- predict(fit_decision_tree, newdata = test_set, type="class")
conf_matrix_decision_tree <- confusionMatrix(predict_decision_tree, factor(test_set$classe))
conf_matrix_decision_tree
plot(conf_matrix_decision_tree$table, col = conf_matrix_decision_tree$byClass,
main = paste("Decision Tree Model: Predictive Accuracy =",
round(conf_matrix_decision_tree$overall['Accuracy'], 4)))
set.seed(2222)
ctrl_GBM <- trainControl(method = "repeatedcv", number = 5, repeats = 2)
fit_GBM  <- train(classe ~ ., data = train_set, method = "gbm",
trControl = ctrl_GBM, verbose = FALSE)
fit_GBM$finalModel
predict_GBM <- predict(fit_GBM, newdata = test_set)
conf_matrix_GBM <- confusionMatrix(predict_GBM, factor(test_set$classe))
conf_matrix_GBM
set.seed(2222)
ctrl_RF <- trainControl(method = "repeatedcv", number = 5, repeats = 2)
fit_RF  <- train(classe ~ ., data = train_set, method = "rf",
trControl = ctrl_RF, verbose = FALSE)
fit_RF$finalModel
predict_quiz <- as.data.frame(predict(fit_RF, newdata = data_quiz))
predict_quiz
q()
